const{Client:Client,GatewayIntentBits:GatewayIntentBits}=require("discord.js"),mysqldump=require("mysqldump"),cron=require("cron"),fs=require("fs"),config=require("./config.json"),bot=new Client({intents:[GatewayIntentBits.Guilds,GatewayIntentBits.GuildMessages]});bot.on("ready",()=>{console.log(`Logged in as ${bot.user.tag}!`)}),bot.login(config.token);const job=new cron.CronJob(config.backupSchedule,async()=>{console.log("Starting backup process...");const e=`${(new Date).toISOString().slice(0,19).replace(/:/g,"-")}.sql`;try{await mysqldump({connection:{host:config.dbHost,user:config.dbUser,password:config.dbPassword,database:config.dbName},dumpToFile:`${config.backupFolder}/${e}`,tables:["tabelle1","tabelle2","tabelle3"]}),console.log(`Backup saved to ${config.backupFolder}/${e}`);const n=fs.readFileSync(`${config.backupFolder}/${e}`),o=bot.channels.cache.get(config.backupChannelId);if(!o)return void console.log(`Invalid backup channel ID: ${config.backupChannelId}`);o.send({content:"Hier ist das neueste Backup:",files:[{attachment:n,name:e}]}).then(()=>{console.log("Backup file sent to Discord")}).catch(e=>{console.error("Error sending backup file to Discord:",e)})}catch(e){console.error("Error creating MySQL dump:",e)}},null,!0,"UTC");